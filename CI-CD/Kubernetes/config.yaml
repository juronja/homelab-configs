apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  # labels:
  #   app.kubernetes.io/name: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: emailservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: emailservice
    spec:
      containers:
      - name: emailservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        readinessProbe: # checks if app is ready/started to receive traffic
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe: # pings the container to check if container is available
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  selector:
    app.kubernetes.io/name: emailservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  # labels:
  #   app.kubernetes.io/name: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: checkoutservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: checkoutservice
    spec:
      containers:
      - name: checkoutservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PAYMENT_SERVICE_ADDR
          value: "paymentservice:50051"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        readinessProbe:
          grpc:
            port: 5050
        livenessProbe:
          grpc:
            port: 5050
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  selector:
    app.kubernetes.io/name: checkoutservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5050
      targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  # labels:
  #   app.kubernetes.io/name: recommendationservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: recommendationservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: recommendationservice
    spec:
      containers:
      - name: recommendationservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
spec:
  selector:
    app.kubernetes.io/name: recommendationservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  # labels:
  #   app.kubernetes.io/name: productcatalogservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: productcatalogservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: productcatalogservice
    spec:
      containers:
      - name: productcatalogservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        readinessProbe:
          grpc:
            port: 3550
        livenessProbe:
          grpc:
            port: 3550
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
spec:
  selector:
    app.kubernetes.io/name: productcatalogservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3550
      targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  # labels:
  #   app.kubernetes.io/name: paymentservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: paymentservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: paymentservice
    spec:
      containers:
      - name: paymentservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  selector:
    app.kubernetes.io/name: paymentservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  # labels:
  #   app.kubernetes.io/name: currencyservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: currencyservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: currencyservice
    spec:
      containers:
      - name: currencyservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          grpc:
            port: 7000
        livenessProbe:
          grpc:
            port: 7000
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  selector:
    app.kubernetes.io/name: currencyservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 7000
      targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  # labels:
  #   app.kubernetes.io/name: shippingservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: shippingservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shippingservice
    spec:
      containers:
      - name: shippingservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  selector:
    app.kubernetes.io/name: shippingservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 50051
      targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  # labels:
  #   app.kubernetes.io/name: adservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: adservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: adservice
    spec:
      containers:
      - name: adservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  selector:
    app.kubernetes.io/name: adservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 9555
      targetPort: 9555
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  # labels:
  #   app.kubernetes.io/name: cartservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cartservice
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cartservice
    spec:
      containers:
      - name: cartservice
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
        ports:
        - containerPort: 7070
        env:
        - name: PORT
          value: "7070"
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        readinessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 15
          grpc:
            port: 7070
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  selector:
    app.kubernetes.io/name: cartservice
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 7070
      targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  # labels:
  #   app.kubernetes.io/name: redis-cart
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-cart
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-cart
    spec:
      containers:
      - name: redis-cart
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        resources:
          requests:
            cpu: 70m
            memory: 200Mi
          limits:
            cpu: 125m
            memory: 256Mi
        volumeMounts:
          - name: redis-data
            mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  selector:
    app.kubernetes.io/name: redis-cart
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  # labels:
  #   app.kubernetes.io/name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
    spec:
      containers:
      - name: frontend
        image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        - name: SHOPPING_ASSISTANT_SERVICE_ADDR
          value: "shoppingassistantservice:80"
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-readiness-probe"
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-liveness-probe"
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app.kubernetes.io/name: frontend
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080