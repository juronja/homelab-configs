blueprint:
  name: Moccamaster
  author: juronja
  description: Turns on a smart plug at a specific time, for my coffee machine.
  domain: automation
  input:
    # Scheduled Time Trigger Inputs
    turn_on_time:
      name: Scheduled Turn On Time
      description: The time of day to turn on the smart plug (e.g., 07:00:00).
      selector:
        time:
    enable_time_trigger:
      name: Enable Scheduled Time Trigger
      description: Turn on to activate the trigger based on a fixed scheduled time.
      selector:
        boolean:
      default: false # Default to off

    # Phone Next Alarm Trigger Inputs
    enable_alarm_trigger:
      name: Enable Alarm Trigger
      description: Turn on to activate the trigger based on your phone's next alarm.
      selector:
        boolean:
      default: false # Default to off

trigger:
  # Trigger 1: Based on a fixed time (if 'turn_on_time' is provided)
  - platform: time
    at: !input turn_on_time
    id: time_based_trigger
    condition:
      - condition: zone
        entity_id: person.polona_burnik
        zone: zone.home
    enabled: !input enable_time_trigger # This enables/disables the trigger itself

  # Trigger 2: Based on the phone's next alarm (if 'phone_next_alarm_sensor' is provided)
  - platform: time
    at: "{{ (states('sensor.pixel_8a_next_alarm') | as_datetime - timedelta(minutes=10)).time() }}"
    id: alarm_based_trigger
    condition: # Added condition for the alarm trigger
      - condition: time
        after: "03:00:00"
        before: "09:00:00"
        entity_id: sensor.pixel_8a_next_alarm # Checks the original alarm time
      - condition: zone
        entity_id: person.polona_burnik
        zone: zone.home
    enabled: !input enable_alarm_trigger # This enables/disables the trigger itself

action:
  - service: switch.turn_on
    target:
      entity_id: switch.moccamaster

mode: single